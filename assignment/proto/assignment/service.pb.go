// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.10.0
// source: service.proto

package assignment

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	errors "protoimport/errors"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Requester specifies the different functions that can access a (plaintext) apikey
type Requester int32

const (
	Requester_REQUESTER_UNSPECIFIED Requester = 0 // Default, should never be used
	Requester_REQUESTER_USER        Requester = 1
	Requester_REQUESTER_ADMIN       Requester = 2
	Requester_REQUESTER_EXECUTION   Requester = 3
)

// Enum value maps for Requester.
var (
	Requester_name = map[int32]string{
		0: "REQUESTER_UNSPECIFIED",
		1: "REQUESTER_USER",
		2: "REQUESTER_ADMIN",
		3: "REQUESTER_EXECUTION",
	}
	Requester_value = map[string]int32{
		"REQUESTER_UNSPECIFIED": 0,
		"REQUESTER_USER":        1,
		"REQUESTER_ADMIN":       2,
		"REQUESTER_EXECUTION":   3,
	}
)

func (x Requester) Enum() *Requester {
	p := new(Requester)
	*p = x
	return p
}

func (x Requester) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Requester) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (Requester) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x Requester) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Requester.Descriptor instead.
func (Requester) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

// Apikey contains all the visible information about an added apikey
type Apikey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApikeyId      string `protobuf:"bytes,1,opt,name=apikey_id,json=apikeyId,proto3" json:"apikey_id,omitempty"`                // UUIDv4
	Custodian     string `protobuf:"bytes,2,opt,name=custodian,proto3" json:"custodian,omitempty"`                              // The name of the custodian that the apikey belongs to
	ApikeyPreview string `protobuf:"bytes,3,opt,name=apikey_preview,json=apikeyPreview,proto3" json:"apikey_preview,omitempty"` // The first five characters of the apikey
}

func (x *Apikey) Reset() {
	*x = Apikey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Apikey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Apikey) ProtoMessage() {}

func (x *Apikey) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Apikey.ProtoReflect.Descriptor instead.
func (*Apikey) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *Apikey) GetApikeyId() string {
	if x != nil {
		return x.ApikeyId
	}
	return ""
}

func (x *Apikey) GetCustodian() string {
	if x != nil {
		return x.Custodian
	}
	return ""
}

func (x *Apikey) GetApikeyPreview() string {
	if x != nil {
		return x.ApikeyPreview
	}
	return ""
}

// ApikeyExtended contains the visible information about an apikey as well as
// the private information (apikey&secret) about an added apikey
type ApikeyExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApikeyDetails *Apikey `protobuf:"bytes,1,opt,name=apikey_details,json=apikeyDetails,proto3" json:"apikey_details,omitempty"`
	Apikey        string  `protobuf:"bytes,2,opt,name=apikey,proto3" json:"apikey,omitempty"` // The apikey in plaintext
	Secret        string  `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"` // The secret in plaintext
}

func (x *ApikeyExtended) Reset() {
	*x = ApikeyExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApikeyExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApikeyExtended) ProtoMessage() {}

func (x *ApikeyExtended) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApikeyExtended.ProtoReflect.Descriptor instead.
func (*ApikeyExtended) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *ApikeyExtended) GetApikeyDetails() *Apikey {
	if x != nil {
		return x.ApikeyDetails
	}
	return nil
}

func (x *ApikeyExtended) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *ApikeyExtended) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type AddApikeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // For which user to add the apikey to
	Custodian string `protobuf:"bytes,2,opt,name=custodian,proto3" json:"custodian,omitempty"`         // The name of the custodian - every custodian may only be added once
	Apikey    string `protobuf:"bytes,3,opt,name=apikey,proto3" json:"apikey,omitempty"`               // The apikey in plaintext
	Secret    string `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`               // The secret in plaintext
}

func (x *AddApikeyRequest) Reset() {
	*x = AddApikeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApikeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApikeyRequest) ProtoMessage() {}

func (x *AddApikeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApikeyRequest.ProtoReflect.Descriptor instead.
func (*AddApikeyRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddApikeyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddApikeyRequest) GetCustodian() string {
	if x != nil {
		return x.Custodian
	}
	return ""
}

func (x *AddApikeyRequest) GetApikey() string {
	if x != nil {
		return x.Apikey
	}
	return ""
}

func (x *AddApikeyRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type AddApikeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error    *errors.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ApikeyId string        `protobuf:"bytes,2,opt,name=apikey_id,json=apikeyId,proto3" json:"apikey_id,omitempty"`
}

func (x *AddApikeyResponse) Reset() {
	*x = AddApikeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApikeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApikeyResponse) ProtoMessage() {}

func (x *AddApikeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApikeyResponse.ProtoReflect.Descriptor instead.
func (*AddApikeyResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *AddApikeyResponse) GetError() *errors.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AddApikeyResponse) GetApikeyId() string {
	if x != nil {
		return x.ApikeyId
	}
	return ""
}

type ListApikeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListApikeysRequest) Reset() {
	*x = ListApikeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApikeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApikeysRequest) ProtoMessage() {}

func (x *ListApikeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApikeysRequest.ProtoReflect.Descriptor instead.
func (*ListApikeysRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListApikeysRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListApikeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   *errors.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Apikeys []*Apikey     `protobuf:"bytes,2,rep,name=apikeys,proto3" json:"apikeys,omitempty"`
}

func (x *ListApikeysResponse) Reset() {
	*x = ListApikeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApikeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApikeysResponse) ProtoMessage() {}

func (x *ListApikeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApikeysResponse.ProtoReflect.Descriptor instead.
func (*ListApikeysResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListApikeysResponse) GetError() *errors.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListApikeysResponse) GetApikeys() []*Apikey {
	if x != nil {
		return x.Apikeys
	}
	return nil
}

type GetApikeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApikeyId  string    `protobuf:"bytes,1,opt,name=apikey_id,json=apikeyId,proto3" json:"apikey_id,omitempty"`
	Requester Requester `protobuf:"varint,2,opt,name=requester,proto3,enum=decus.assignment.Requester" json:"requester,omitempty"`
}

func (x *GetApikeyRequest) Reset() {
	*x = GetApikeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApikeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApikeyRequest) ProtoMessage() {}

func (x *GetApikeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApikeyRequest.ProtoReflect.Descriptor instead.
func (*GetApikeyRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetApikeyRequest) GetApikeyId() string {
	if x != nil {
		return x.ApikeyId
	}
	return ""
}

func (x *GetApikeyRequest) GetRequester() Requester {
	if x != nil {
		return x.Requester
	}
	return Requester_REQUESTER_UNSPECIFIED
}

type GetApikeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *errors.Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Apikey *ApikeyExtended `protobuf:"bytes,2,opt,name=apikey,proto3" json:"apikey,omitempty"`
}

func (x *GetApikeyResponse) Reset() {
	*x = GetApikeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApikeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApikeyResponse) ProtoMessage() {}

func (x *GetApikeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApikeyResponse.ProtoReflect.Descriptor instead.
func (*GetApikeyResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetApikeyResponse) GetError() *errors.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetApikeyResponse) GetApikey() *ApikeyExtended {
	if x != nil {
		return x.Apikey
	}
	return nil
}

type GetApikeyLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApikeyId string `protobuf:"bytes,1,opt,name=apikey_id,json=apikeyId,proto3" json:"apikey_id,omitempty"`
}

func (x *GetApikeyLogsRequest) Reset() {
	*x = GetApikeyLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApikeyLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApikeyLogsRequest) ProtoMessage() {}

func (x *GetApikeyLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApikeyLogsRequest.ProtoReflect.Descriptor instead.
func (*GetApikeyLogsRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetApikeyLogsRequest) GetApikeyId() string {
	if x != nil {
		return x.ApikeyId
	}
	return ""
}

type GetApikeyLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *errors.Error                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Logs  []*GetApikeyLogsResponse_LogEntry `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *GetApikeyLogsResponse) Reset() {
	*x = GetApikeyLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApikeyLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApikeyLogsResponse) ProtoMessage() {}

func (x *GetApikeyLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApikeyLogsResponse.ProtoReflect.Descriptor instead.
func (*GetApikeyLogsResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetApikeyLogsResponse) GetError() *errors.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetApikeyLogsResponse) GetLogs() []*GetApikeyLogsResponse_LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

type GetApikeyLogsResponse_LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                 // The unix timestamp (in milliseconds) that the log event happened
	Requester Requester `protobuf:"varint,2,opt,name=requester,proto3,enum=decus.assignment.Requester" json:"requester,omitempty"` // The requester which requested access to the apikey
	Action    string    `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`                                        // The action that was requested (currently only one exists = accessSecret)
}

func (x *GetApikeyLogsResponse_LogEntry) Reset() {
	*x = GetApikeyLogsResponse_LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApikeyLogsResponse_LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApikeyLogsResponse_LogEntry) ProtoMessage() {}

func (x *GetApikeyLogsResponse_LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApikeyLogsResponse_LogEntry.ProtoReflect.Descriptor instead.
func (*GetApikeyLogsResponse_LogEntry) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetApikeyLogsResponse_LogEntry) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetApikeyLogsResponse_LogEntry) GetRequester() Requester {
	if x != nil {
		return x.Requester
	}
	return Requester_REQUESTER_UNSPECIFIED
}

func (x *GetApikeyLogsResponse_LogEntry) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6a, 0x0a, 0x06, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x69,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70,
	0x69, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x69, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x69, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x5f, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70,
	0x69, 0x6b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x81, 0x01, 0x0a, 0x0e,
	0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x3f,
	0x0a, 0x0e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79,
	0x52, 0x0d, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x79, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70,
	0x69, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x6b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x5b, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70,
	0x69, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x69, 0x6b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x65, 0x63, 0x75, 0x73, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x63, 0x75,
	0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69,
	0x6b, 0x65, 0x79, 0x52, 0x07, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x6a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x78, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64,
	0x65, 0x63, 0x75, 0x73, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x6b,
	0x65, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x06, 0x61, 0x70, 0x69, 0x6b,
	0x65, 0x79, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70,
	0x69, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x85, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x63,
	0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x1a, 0x7b, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x39, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a,
	0x68, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x15,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x58,
	0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x32, 0x81, 0x03, 0x0a, 0x0d, 0x41, 0x70,
	0x69, 0x6b, 0x65, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x41,
	0x64, 0x64, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64,
	0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65,
	0x79, 0x73, 0x12, 0x24, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73,
	0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x12, 0x22,
	0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x63,
	0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x65, 0x63, 0x75, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x18, 0x5a,
	0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_proto_goTypes = []interface{}{
	(Requester)(0),                         // 0: decus.assignment.Requester
	(*Apikey)(nil),                         // 1: decus.assignment.Apikey
	(*ApikeyExtended)(nil),                 // 2: decus.assignment.ApikeyExtended
	(*AddApikeyRequest)(nil),               // 3: decus.assignment.AddApikeyRequest
	(*AddApikeyResponse)(nil),              // 4: decus.assignment.AddApikeyResponse
	(*ListApikeysRequest)(nil),             // 5: decus.assignment.ListApikeysRequest
	(*ListApikeysResponse)(nil),            // 6: decus.assignment.ListApikeysResponse
	(*GetApikeyRequest)(nil),               // 7: decus.assignment.GetApikeyRequest
	(*GetApikeyResponse)(nil),              // 8: decus.assignment.GetApikeyResponse
	(*GetApikeyLogsRequest)(nil),           // 9: decus.assignment.GetApikeyLogsRequest
	(*GetApikeyLogsResponse)(nil),          // 10: decus.assignment.GetApikeyLogsResponse
	(*GetApikeyLogsResponse_LogEntry)(nil), // 11: decus.assignment.GetApikeyLogsResponse.LogEntry
	(*errors.Error)(nil),                   // 12: decus.errors.Error
}
var file_service_proto_depIdxs = []int32{
	1,  // 0: decus.assignment.ApikeyExtended.apikey_details:type_name -> decus.assignment.Apikey
	12, // 1: decus.assignment.AddApikeyResponse.error:type_name -> decus.errors.Error
	12, // 2: decus.assignment.ListApikeysResponse.error:type_name -> decus.errors.Error
	1,  // 3: decus.assignment.ListApikeysResponse.apikeys:type_name -> decus.assignment.Apikey
	0,  // 4: decus.assignment.GetApikeyRequest.requester:type_name -> decus.assignment.Requester
	12, // 5: decus.assignment.GetApikeyResponse.error:type_name -> decus.errors.Error
	2,  // 6: decus.assignment.GetApikeyResponse.apikey:type_name -> decus.assignment.ApikeyExtended
	12, // 7: decus.assignment.GetApikeyLogsResponse.error:type_name -> decus.errors.Error
	11, // 8: decus.assignment.GetApikeyLogsResponse.logs:type_name -> decus.assignment.GetApikeyLogsResponse.LogEntry
	0,  // 9: decus.assignment.GetApikeyLogsResponse.LogEntry.requester:type_name -> decus.assignment.Requester
	3,  // 10: decus.assignment.ApikeyService.AddApikey:input_type -> decus.assignment.AddApikeyRequest
	5,  // 11: decus.assignment.ApikeyService.ListApikeys:input_type -> decus.assignment.ListApikeysRequest
	7,  // 12: decus.assignment.ApikeyService.GetApikey:input_type -> decus.assignment.GetApikeyRequest
	9,  // 13: decus.assignment.ApikeyService.GetApikeyLogs:input_type -> decus.assignment.GetApikeyLogsRequest
	4,  // 14: decus.assignment.ApikeyService.AddApikey:output_type -> decus.assignment.AddApikeyResponse
	6,  // 15: decus.assignment.ApikeyService.ListApikeys:output_type -> decus.assignment.ListApikeysResponse
	8,  // 16: decus.assignment.ApikeyService.GetApikey:output_type -> decus.assignment.GetApikeyResponse
	10, // 17: decus.assignment.ApikeyService.GetApikeyLogs:output_type -> decus.assignment.GetApikeyLogsResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Apikey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApikeyExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddApikeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddApikeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApikeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApikeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApikeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApikeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApikeyLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApikeyLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApikeyLogsResponse_LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
